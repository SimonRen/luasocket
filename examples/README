This directory contains some sample  programs using LuaSocket. This code
is not supported.

    listener.lua            -- socket to stdout
    talker.lua              -- stdin to socket

listener.lua and talker.lua are about  the simplest applications you can
write  using  LuaSocket.  Run   

	'luasocket listen.lua'  and  'luasocket talk.lua'

on different terminals. Whatever  you type on talk.lua will be
printed by listen.lua.

    dict.lua                -- dict client

The dict.lua  module was  a cool  simple client  for the  DICT protocol,
written by Luiz Henrique Figueiredo. This new version has been converted
into a library, similar to the HTTP  and FTP libraries, that can be used
from within  any luasocket application. Take  a look on the  source code
and you will be able to figure out how to use it.

    daytimeclnt.lua         -- day time client

Just run the program to retrieve the hour and date in readable form from
any server running an UDP daytime daemon.

    echoclnt.lua            -- UDP echo client
    echosrvr.lua            -- UDP echo server

These are a UDP echo client/server pair. They work with other client and
servers as well.

    tftpclnt.lua            -- Trivial FTP client

This module implements file retrieval by the TFTP protocol. Its main use
is to test the UDP code, but someone might find it usefull.

    tinyirc.lua             -- irc like broadcast server

This is a simple server that  waits simultaneously on two server sockets
for telnet connections.  Everything it receives from  the telnet clients
is  broadcasted to  every other  connected client.  It tests  the select
function and shows  how to create a simple server  whith LuaSocket. Just
run broadcast.lua and  then open as many telnet connections  as you want
to ports 8080 and 8081.

    get.lua                 -- file retriever

This little  program is  a client  that uses  the FTP  and HTTP  code to
implement a  command line  file graber. Just  run 

	luasocket -f get.lua <remote-file> [<local-file>]

to download  a remote file (either  ftp:// or http://) to  the specified
local file.  The program  also prints  the download  throughput, elapsed
time, bytes already downloaded etc during download.

	check-links.lua			-- HTML link checker program

This little program scans a HTML file and checks for broken links. It is
similar to check-links.pl by Jamie  Zawinski, but uses all facilities of
the LuaSocket library and the Lua language. It has not been thoroughly
tested, but it should work. Just run

	luasocket -f check-links.lua {<url>} > output

and open the result to see a list of broken links. 

Good luck,
Diego.
