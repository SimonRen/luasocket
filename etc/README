This directory contains code that is more useful than the examples. This code
*is* supported.

    lua.lua and luasocket.lua

These are modules to suport dynamic loading of LuaSocket by the stand alone
Lua Interpreter with the use of the "require" function. For my Mac OS X
system, I place lua.lua in /usr/local/lua, luasocket.lua and the
libluasocket.dylib in /usr/local/lua/luasocket and set the following
environment variables:

    LUA_PATH=/usr/local/lua/?/?.lua
    LUA_INIT=@/usr/local/lua/lua.lua
    LUA_FUNCNAME=_?
    LUA_LIBNAME=/usr/local/lua/?/lib?.dylib

With that, I can run any luasocket application with the command line:

    lua -l luasocket <script>

Much nicer than having to build a new executable just to initialize
LuaSocket!


    tftp.lua                -- Trivial FTP client

This module implements file retrieval by the TFTP protocol. Its main use
is to test the UDP code, but someone might find it usefull.

    get.lua                 -- file retriever

This little  program is  a client  that uses  the FTP  and HTTP  code to
implement a  command line  file graber. Just  run 

	lua -l luasocket get.lua <remote-file> [<local-file>]

to download  a remote file (either  ftp:// or http://) to  the specified
local file.  The program  also prints  the download  throughput, elapsed
time, bytes already downloaded etc during download.

	check-links.lua			-- HTML link checker program

This little program scans a HTML file and checks for broken links. It is
similar to check-links.pl by Jamie Zawinski, but uses all facilities of
the LuaSocket library and the Lua language. It has not been thoroughly
tested, but it should work. Just run

	lua -l luasocket check-links.lua {<url>} > output

and open the result to see a list of broken links. 

    cl-compat.lua

This module implements an old (and higher level) interface to SMTP provided
by the CGILUA toolkit. It runs on top of the LuaSocket SMTP interface.

Good luck,
Diego.
